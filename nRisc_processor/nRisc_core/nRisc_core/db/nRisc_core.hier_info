|nRisc_core
clock => clock.IN1


|nRisc_core|program_counter:PC_MODULE
clock => starter.CLK
clock => signal.CLK
clock => counter[0].CLK
clock => counter[1].CLK
clock => counter[2].CLK
clock => counter[3].CLK
clock => counter[4].CLK
clock => counter[5].CLK
clock => counter[6].CLK
clock => counter[7].CLK
jump_data[0] => counter.DATAB
jump_data[1] => counter.DATAB
jump_data[2] => counter.DATAB
jump_data[3] => counter.DATAB
jump_data[4] => counter.DATAB
jump_data[5] => counter.DATAB
jump_data[6] => counter.DATAB
jump_data[7] => counter.DATAB
jump => counter.OUTPUTSELECT
jump => counter.OUTPUTSELECT
jump => counter.OUTPUTSELECT
jump => counter.OUTPUTSELECT
jump => counter.OUTPUTSELECT
jump => counter.OUTPUTSELECT
jump => counter.OUTPUTSELECT
jump => counter.OUTPUTSELECT
pc[0] <= counter[0].DB_MAX_OUTPUT_PORT_TYPE
pc[1] <= counter[1].DB_MAX_OUTPUT_PORT_TYPE
pc[2] <= counter[2].DB_MAX_OUTPUT_PORT_TYPE
pc[3] <= counter[3].DB_MAX_OUTPUT_PORT_TYPE
pc[4] <= counter[4].DB_MAX_OUTPUT_PORT_TYPE
pc[5] <= counter[5].DB_MAX_OUTPUT_PORT_TYPE
pc[6] <= counter[6].DB_MAX_OUTPUT_PORT_TYPE
pc[7] <= counter[7].DB_MAX_OUTPUT_PORT_TYPE
out_signal <= signal.DB_MAX_OUTPUT_PORT_TYPE
jumped <= <GND>


|nRisc_core|instructions_memory:IM_MODULE
clock => ~NO_FANOUT~
pc[0] => memory.RADDR
pc[1] => memory.RADDR1
pc[2] => memory.RADDR2
pc[3] => memory.RADDR3
pc[4] => memory.RADDR4
pc[5] => memory.RADDR5
pc[6] => memory.RADDR6
pc[7] => memory.RADDR7
instruction[0] <= memory.DATAOUT
instruction[1] <= memory.DATAOUT1
instruction[2] <= memory.DATAOUT2
instruction[3] <= memory.DATAOUT3
instruction[4] <= memory.DATAOUT4
instruction[5] <= memory.DATAOUT5
instruction[6] <= memory.DATAOUT6
instruction[7] <= memory.DATAOUT7
out_signal <= out_signal.DB_MAX_OUTPUT_PORT_TYPE


|nRisc_core|mux_alpha:MX_MODULE
clock => ~NO_FANOUT~
instruction[0] => data[0].DATAIN
instruction[0] => reg_b[0].DATAIN
instruction[1] => data[1].DATAIN
instruction[1] => reg_b[1].DATAIN
instruction[2] => data[2].DATAIN
instruction[2] => reg_a[0].DATAIN
instruction[3] => data[3].DATAIN
instruction[3] => reg_a[1].DATAIN
instruction[4] => data[4].DATAIN
instruction[4] => reg_a[2].DATAIN
instruction[5] => data[5].DATAIN
instruction[5] => operation[0].DATAIN
instruction[6] => data[6].DATAIN
instruction[6] => operation[1].DATAIN
instruction[7] => data[7].DATAIN
instruction[7] => operation[2].DATAIN
operation[0] <= instruction[5].DB_MAX_OUTPUT_PORT_TYPE
operation[1] <= instruction[6].DB_MAX_OUTPUT_PORT_TYPE
operation[2] <= instruction[7].DB_MAX_OUTPUT_PORT_TYPE
reg_a[0] <= instruction[2].DB_MAX_OUTPUT_PORT_TYPE
reg_a[1] <= instruction[3].DB_MAX_OUTPUT_PORT_TYPE
reg_a[2] <= instruction[4].DB_MAX_OUTPUT_PORT_TYPE
reg_b[0] <= instruction[0].DB_MAX_OUTPUT_PORT_TYPE
reg_b[1] <= instruction[1].DB_MAX_OUTPUT_PORT_TYPE
reg_b[2] <= <GND>
data[0] <= instruction[0].DB_MAX_OUTPUT_PORT_TYPE
data[1] <= instruction[1].DB_MAX_OUTPUT_PORT_TYPE
data[2] <= instruction[2].DB_MAX_OUTPUT_PORT_TYPE
data[3] <= instruction[3].DB_MAX_OUTPUT_PORT_TYPE
data[4] <= instruction[4].DB_MAX_OUTPUT_PORT_TYPE
data[5] <= instruction[5].DB_MAX_OUTPUT_PORT_TYPE
data[6] <= instruction[6].DB_MAX_OUTPUT_PORT_TYPE
data[7] <= instruction[7].DB_MAX_OUTPUT_PORT_TYPE
out_signal <= out_signal.DB_MAX_OUTPUT_PORT_TYPE


|nRisc_core|controler:CT_MODULE
clock => ~NO_FANOUT~
instruction[0] => operation[0].DATAIN
instruction[0] => Equal0.IN1
instruction[0] => Equal1.IN2
instruction[1] => operation[1].DATAIN
instruction[1] => Equal0.IN0
instruction[1] => Equal1.IN1
instruction[2] => operation[2].DATAIN
instruction[2] => Equal0.IN2
instruction[2] => Equal1.IN0
reg_alpha[0] => index_alpha[0].DATAIN
reg_alpha[1] => index_alpha[1].DATAIN
reg_alpha[2] => index_alpha[2].DATAIN
reg_beta[0] => index_beta[0].DATAIN
reg_beta[1] => index_beta[1].DATAIN
reg_beta[2] => index_beta[2].DATAIN
data[0] => data_in[0].DATAIN
data[1] => data_in[1].DATAIN
data[2] => data_in[2].DATAIN
data[3] => data_in[3].DATAIN
data[4] => data_in[4].DATAIN
data[5] => data_in[5].DATAIN
data[6] => data_in[6].DATAIN
data[7] => data_in[7].DATAIN
index_a[0] <= index_alpha[0].DB_MAX_OUTPUT_PORT_TYPE
index_a[1] <= index_alpha[1].DB_MAX_OUTPUT_PORT_TYPE
index_a[2] <= index_alpha[2].DB_MAX_OUTPUT_PORT_TYPE
index_b[0] <= index_beta[0].DB_MAX_OUTPUT_PORT_TYPE
index_b[1] <= index_beta[1].DB_MAX_OUTPUT_PORT_TYPE
index_b[2] <= index_beta[2].DB_MAX_OUTPUT_PORT_TYPE
op[0] <= operation[0].DB_MAX_OUTPUT_PORT_TYPE
op[1] <= operation[1].DB_MAX_OUTPUT_PORT_TYPE
op[2] <= operation[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[0] <= data_in[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_in[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_in[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_in[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_in[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_in[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_in[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_in[7].DB_MAX_OUTPUT_PORT_TYPE
jump <= jump.DB_MAX_OUTPUT_PORT_TYPE
out_signal <= signal.DB_MAX_OUTPUT_PORT_TYPE


|nRisc_core|registers:RT_MODULE
clock_read => ~NO_FANOUT~
clock_mem => ~NO_FANOUT~
clock_alu => ~NO_FANOUT~
instruction[0] => operation[0].DATAIN
instruction[0] => Equal0.IN1
instruction[0] => Equal1.IN2
instruction[0] => Equal2.IN2
instruction[1] => operation[1].DATAIN
instruction[1] => Equal0.IN0
instruction[1] => Equal1.IN1
instruction[1] => Equal2.IN1
instruction[2] => operation[2].DATAIN
instruction[2] => Equal0.IN2
instruction[2] => Equal1.IN0
instruction[2] => Equal2.IN0
reg_alpha[0] => Decoder0.IN2
reg_alpha[0] => temp_index.DATAA
reg_alpha[0] => Mux0.IN2
reg_alpha[0] => Mux1.IN2
reg_alpha[0] => Mux2.IN2
reg_alpha[0] => Mux3.IN2
reg_alpha[0] => Mux4.IN2
reg_alpha[0] => Mux5.IN2
reg_alpha[0] => Mux6.IN2
reg_alpha[0] => Mux7.IN2
reg_alpha[1] => Decoder0.IN1
reg_alpha[1] => temp_index.DATAA
reg_alpha[1] => Mux0.IN1
reg_alpha[1] => Mux1.IN1
reg_alpha[1] => Mux2.IN1
reg_alpha[1] => Mux3.IN1
reg_alpha[1] => Mux4.IN1
reg_alpha[1] => Mux5.IN1
reg_alpha[1] => Mux6.IN1
reg_alpha[1] => Mux7.IN1
reg_alpha[2] => Decoder0.IN0
reg_alpha[2] => temp_index.DATAA
reg_alpha[2] => Mux0.IN0
reg_alpha[2] => Mux1.IN0
reg_alpha[2] => Mux2.IN0
reg_alpha[2] => Mux3.IN0
reg_alpha[2] => Mux4.IN0
reg_alpha[2] => Mux5.IN0
reg_alpha[2] => Mux6.IN0
reg_alpha[2] => Mux7.IN0
reg_beta[0] => Mux8.IN2
reg_beta[0] => Mux9.IN2
reg_beta[0] => Mux10.IN2
reg_beta[0] => Mux11.IN2
reg_beta[0] => Mux12.IN2
reg_beta[0] => Mux13.IN2
reg_beta[0] => Mux14.IN2
reg_beta[0] => Mux15.IN2
reg_beta[1] => Mux8.IN1
reg_beta[1] => Mux9.IN1
reg_beta[1] => Mux10.IN1
reg_beta[1] => Mux11.IN1
reg_beta[1] => Mux12.IN1
reg_beta[1] => Mux13.IN1
reg_beta[1] => Mux14.IN1
reg_beta[1] => Mux15.IN1
reg_beta[2] => Mux8.IN0
reg_beta[2] => Mux9.IN0
reg_beta[2] => Mux10.IN0
reg_beta[2] => Mux11.IN0
reg_beta[2] => Mux12.IN0
reg_beta[2] => Mux13.IN0
reg_beta[2] => Mux14.IN0
reg_beta[2] => Mux15.IN0
solution_alu[0] => memory.IN0
solution_alu[1] => memory.IN0
solution_alu[2] => memory.IN0
solution_alu[3] => memory.IN0
solution_alu[4] => memory.IN0
solution_alu[5] => memory.IN0
solution_alu[6] => memory.IN0
solution_alu[7] => memory.IN0
memory_data[0] => memory.IN1
memory_data[1] => memory.IN1
memory_data[2] => memory.IN1
memory_data[3] => memory.IN1
memory_data[4] => memory.IN1
memory_data[5] => memory.IN1
memory_data[6] => memory.IN1
memory_data[7] => memory.IN1
imediate[0] => memory[0][0].DATAB
imediate[1] => memory[0][1].DATAB
imediate[2] => memory[0][2].DATAB
imediate[3] => memory[0][3].DATAB
imediate[4] => memory[0][4].DATAB
imediate[5] => memory[0][5].DATAB
imediate[6] => memory[0][6].DATAB
imediate[7] => memory[0][7].DATAB
op_type[0] <= operation[0].DB_MAX_OUTPUT_PORT_TYPE
op_type[1] <= operation[1].DB_MAX_OUTPUT_PORT_TYPE
op_type[2] <= operation[2].DB_MAX_OUTPUT_PORT_TYPE
reg_beq[0] <= r_beq[0].DB_MAX_OUTPUT_PORT_TYPE
reg_beq[1] <= r_beq[1].DB_MAX_OUTPUT_PORT_TYPE
reg_beq[2] <= r_beq[2].DB_MAX_OUTPUT_PORT_TYPE
reg_beq[3] <= r_beq[3].DB_MAX_OUTPUT_PORT_TYPE
reg_beq[4] <= r_beq[4].DB_MAX_OUTPUT_PORT_TYPE
reg_beq[5] <= r_beq[5].DB_MAX_OUTPUT_PORT_TYPE
reg_beq[6] <= r_beq[6].DB_MAX_OUTPUT_PORT_TYPE
reg_beq[7] <= r_beq[7].DB_MAX_OUTPUT_PORT_TYPE
data_alpha[0] <= cache_a[0].DB_MAX_OUTPUT_PORT_TYPE
data_alpha[1] <= cache_a[1].DB_MAX_OUTPUT_PORT_TYPE
data_alpha[2] <= cache_a[2].DB_MAX_OUTPUT_PORT_TYPE
data_alpha[3] <= cache_a[3].DB_MAX_OUTPUT_PORT_TYPE
data_alpha[4] <= cache_a[4].DB_MAX_OUTPUT_PORT_TYPE
data_alpha[5] <= cache_a[5].DB_MAX_OUTPUT_PORT_TYPE
data_alpha[6] <= cache_a[6].DB_MAX_OUTPUT_PORT_TYPE
data_alpha[7] <= cache_a[7].DB_MAX_OUTPUT_PORT_TYPE
data_beta[0] <= cache_b[0].DB_MAX_OUTPUT_PORT_TYPE
data_beta[1] <= cache_b[1].DB_MAX_OUTPUT_PORT_TYPE
data_beta[2] <= cache_b[2].DB_MAX_OUTPUT_PORT_TYPE
data_beta[3] <= cache_b[3].DB_MAX_OUTPUT_PORT_TYPE
data_beta[4] <= cache_b[4].DB_MAX_OUTPUT_PORT_TYPE
data_beta[5] <= cache_b[5].DB_MAX_OUTPUT_PORT_TYPE
data_beta[6] <= cache_b[6].DB_MAX_OUTPUT_PORT_TYPE
data_beta[7] <= cache_b[7].DB_MAX_OUTPUT_PORT_TYPE
out_signal <= signal.DB_MAX_OUTPUT_PORT_TYPE


|nRisc_core|alu:AL_MODULE
clock => ~NO_FANOUT~
instruction[0] => Equal0.IN2
instruction[0] => Equal1.IN0
instruction[0] => Equal2.IN2
instruction[0] => Equal3.IN2
instruction[0] => Equal5.IN2
instruction[1] => Equal0.IN1
instruction[1] => Equal1.IN2
instruction[1] => Equal2.IN0
instruction[1] => Equal3.IN1
instruction[1] => Equal5.IN1
instruction[2] => Equal0.IN0
instruction[2] => Equal1.IN1
instruction[2] => Equal2.IN1
instruction[2] => Equal3.IN0
instruction[2] => Equal5.IN0
r_beq[0] => Equal6.IN7
r_beq[0] => Equal7.IN0
r_beq[1] => Equal6.IN6
r_beq[1] => Equal7.IN7
r_beq[2] => Equal6.IN5
r_beq[2] => Equal7.IN6
r_beq[3] => Equal6.IN4
r_beq[3] => Equal7.IN5
r_beq[4] => Equal6.IN3
r_beq[4] => Equal7.IN4
r_beq[5] => Equal6.IN2
r_beq[5] => Equal7.IN3
r_beq[6] => Equal6.IN1
r_beq[6] => Equal7.IN2
r_beq[7] => Equal6.IN0
r_beq[7] => Equal7.IN1
reg_a[0] => Add0.IN8
reg_a[0] => Add1.IN16
reg_a[0] => Mult0.IN7
reg_a[0] => Equal4.IN7
reg_a[0] => internal_solution.DATAB
reg_a[0] => reg_jump_data[0].DATAB
reg_a[1] => Add0.IN7
reg_a[1] => Add1.IN15
reg_a[1] => Mult0.IN6
reg_a[1] => Equal4.IN6
reg_a[1] => internal_solution.DATAB
reg_a[1] => reg_jump_data[1].DATAB
reg_a[2] => Add0.IN6
reg_a[2] => Add1.IN14
reg_a[2] => Mult0.IN5
reg_a[2] => Equal4.IN5
reg_a[2] => internal_solution.DATAB
reg_a[2] => reg_jump_data[2].DATAB
reg_a[3] => Add0.IN5
reg_a[3] => Add1.IN13
reg_a[3] => Mult0.IN4
reg_a[3] => Equal4.IN4
reg_a[3] => internal_solution.DATAB
reg_a[3] => reg_jump_data[3].DATAB
reg_a[4] => Add0.IN4
reg_a[4] => Add1.IN12
reg_a[4] => Mult0.IN3
reg_a[4] => Equal4.IN3
reg_a[4] => internal_solution.DATAB
reg_a[4] => reg_jump_data[4].DATAB
reg_a[5] => Add0.IN3
reg_a[5] => Add1.IN11
reg_a[5] => Mult0.IN2
reg_a[5] => Equal4.IN2
reg_a[5] => internal_solution.DATAB
reg_a[5] => reg_jump_data[5].DATAB
reg_a[6] => Add0.IN2
reg_a[6] => Add1.IN10
reg_a[6] => Mult0.IN1
reg_a[6] => Equal4.IN1
reg_a[6] => internal_solution.DATAB
reg_a[6] => reg_jump_data[6].DATAB
reg_a[7] => Add0.IN1
reg_a[7] => Add1.IN9
reg_a[7] => Mult0.IN0
reg_a[7] => Equal4.IN0
reg_a[7] => internal_solution.DATAB
reg_a[7] => reg_jump_data[7].DATAB
reg_b[0] => Add0.IN16
reg_b[0] => Mult0.IN15
reg_b[0] => Equal4.IN15
reg_b[0] => reg_jump_data[0].DATAA
reg_b[0] => Add1.IN8
reg_b[1] => Add0.IN15
reg_b[1] => Mult0.IN14
reg_b[1] => Equal4.IN14
reg_b[1] => reg_jump_data[1].DATAA
reg_b[1] => Add1.IN7
reg_b[2] => Add0.IN14
reg_b[2] => Mult0.IN13
reg_b[2] => Equal4.IN13
reg_b[2] => reg_jump_data[2].DATAA
reg_b[2] => Add1.IN6
reg_b[3] => Add0.IN13
reg_b[3] => Mult0.IN12
reg_b[3] => Equal4.IN12
reg_b[3] => reg_jump_data[3].DATAA
reg_b[3] => Add1.IN5
reg_b[4] => Add0.IN12
reg_b[4] => Mult0.IN11
reg_b[4] => Equal4.IN11
reg_b[4] => reg_jump_data[4].DATAA
reg_b[4] => Add1.IN4
reg_b[5] => Add0.IN11
reg_b[5] => Mult0.IN10
reg_b[5] => Equal4.IN10
reg_b[5] => reg_jump_data[5].DATAA
reg_b[5] => Add1.IN3
reg_b[6] => Add0.IN10
reg_b[6] => Mult0.IN9
reg_b[6] => Equal4.IN9
reg_b[6] => reg_jump_data[6].DATAA
reg_b[6] => Add1.IN2
reg_b[7] => Add0.IN9
reg_b[7] => Mult0.IN8
reg_b[7] => Equal4.IN8
reg_b[7] => reg_jump_data[7].DATAA
reg_b[7] => Add1.IN1
solution[0] <= internal_solution.DB_MAX_OUTPUT_PORT_TYPE
solution[1] <= internal_solution.DB_MAX_OUTPUT_PORT_TYPE
solution[2] <= internal_solution.DB_MAX_OUTPUT_PORT_TYPE
solution[3] <= internal_solution.DB_MAX_OUTPUT_PORT_TYPE
solution[4] <= internal_solution.DB_MAX_OUTPUT_PORT_TYPE
solution[5] <= internal_solution.DB_MAX_OUTPUT_PORT_TYPE
solution[6] <= internal_solution.DB_MAX_OUTPUT_PORT_TYPE
solution[7] <= internal_solution.DB_MAX_OUTPUT_PORT_TYPE
jump_data[0] <= reg_jump_data[0].DB_MAX_OUTPUT_PORT_TYPE
jump_data[1] <= reg_jump_data[1].DB_MAX_OUTPUT_PORT_TYPE
jump_data[2] <= reg_jump_data[2].DB_MAX_OUTPUT_PORT_TYPE
jump_data[3] <= reg_jump_data[3].DB_MAX_OUTPUT_PORT_TYPE
jump_data[4] <= reg_jump_data[4].DB_MAX_OUTPUT_PORT_TYPE
jump_data[5] <= reg_jump_data[5].DB_MAX_OUTPUT_PORT_TYPE
jump_data[6] <= reg_jump_data[6].DB_MAX_OUTPUT_PORT_TYPE
jump_data[7] <= reg_jump_data[7].DB_MAX_OUTPUT_PORT_TYPE
out_signal <= signal.DB_MAX_OUTPUT_PORT_TYPE
overflow_signal <= always0.DB_MAX_OUTPUT_PORT_TYPE


|nRisc_core|memory:ME_MODULE
clock => ~NO_FANOUT~
instruction[0] => Equal0.IN2
instruction[0] => Equal1.IN1
instruction[1] => Equal0.IN1
instruction[1] => Equal1.IN2
instruction[2] => Equal0.IN0
instruction[2] => Equal1.IN0
reg_alpha[0] => memory.DATAIN
reg_alpha[1] => memory.DATAIN1
reg_alpha[2] => memory.DATAIN2
reg_alpha[3] => memory.DATAIN3
reg_alpha[4] => memory.DATAIN4
reg_alpha[5] => memory.DATAIN5
reg_alpha[6] => memory.DATAIN6
reg_alpha[7] => memory.DATAIN7
reg_beta[0] => memory.RADDR
reg_beta[0] => memory.WADDR
reg_beta[1] => memory.RADDR1
reg_beta[1] => memory.WADDR1
reg_beta[2] => memory.RADDR2
reg_beta[2] => memory.WADDR2
reg_beta[3] => memory.RADDR3
reg_beta[3] => memory.WADDR3
reg_beta[4] => memory.RADDR4
reg_beta[4] => memory.WADDR4
reg_beta[5] => memory.RADDR5
reg_beta[5] => memory.WADDR5
reg_beta[6] => memory.RADDR6
reg_beta[6] => memory.WADDR6
reg_beta[7] => memory.RADDR7
reg_beta[7] => memory.WADDR7
data_out[0] <= solution.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= solution.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= solution.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= solution.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= solution.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= solution.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= solution.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= solution.DB_MAX_OUTPUT_PORT_TYPE
out_signal <= signal.DB_MAX_OUTPUT_PORT_TYPE


