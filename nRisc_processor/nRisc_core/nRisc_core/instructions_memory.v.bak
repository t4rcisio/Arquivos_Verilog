








module instructions_memory(pc, clock, instruction);

input [7:0] pc;
input clock;

output [7:0] instruction;


reg [7:0] memory [255:0];

initial begin 
	memory[00] = 8'bxxxxxxxx; // inicializa
	memory[01] = 8'b01101000; // li s0
	memory[02] = 8'b00000000; // imediato
	memory[03] = 8'b01101100; // li s1
   memory[04] = 8'b00000001; // imediato
	memory[05] = 8'b01110000; // li s2
	memory[06] = 8'b00000010; // imediato
	memory[07] = 8'b01110100; // li s3
	memory[08] = 8'b00000011; // imediato
	memory[09] = 8'b01111000; // li s4
	memory[10] = 8'b00000100; // imediato
	memory[11] = 8'b01111100; // li s5
	memory[12] = 8'b00000101; // imediato
	memory[13] = 8'b00010011; // add s2,s1
	memory[14] = 8'b00110011; // sub s1,s1 
	memory[15] = 8'b01010011; // mul s2,s1
	memory[16] = 8'b10010000; // swd s2,s0
	memory[17] = 8'b10111100; // lwd s5,s0
	memory[18] = 8'b11011100; // beq s5,s0
	memory[19] = 8'b11111110; // bNZ s5,s0
end

always @(negedge clock) begin

	

end


endmodule